/*
 * File: app/controller/MapController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('POIManager.controller.MapController', {
    extend: 'Ext.app.Controller',

    stores: [
        'POI'
    ],

    refs: [
        {
            ref: 'mapPanel',
            selector: 'mappanel'
        },
        {
            ref: 'createPOIForm',
            selector: 'createpoiwindow > form'
        }
    ],

    initMap: function(component, eOpts) {
        this._map = new google.maps.Map(this.getMapPanel().body.dom, {
            zoom: 9,
            center:  new google.maps.LatLng(51.067577, -1.795812)
        });

        this._map.enableAddPlacemarker();

        this._addPlacemarkerTool = this._map.getAddPlacemarkerObject();

        google.maps.event.addListener(this._addPlacemarkerTool,"activate", Ext.Function.bind(this.addPMToolClickHandler, this));
        google.maps.event.addListener(this._addPlacemarkerTool,"deactivate", Ext.Function.bind(this.addPMToolClickHandler, this));

        google.maps.event.addListener(this._addPlacemarkerTool,"mousemove", Ext.Function.bind(this.addPMToolMouseMoveHandler, this));
        google.maps.event.addListener(this._addPlacemarkerTool,"mapclick", Ext.Function.bind(this.mapClick, this));
    },

    onBtnCreateClick: function(button, e, eOpts) {
        var rec = this.getCreatePOIForm().getRecord(),
            vals = this.getCreatePOIForm().getForm().getValues();
        rec.set('Name', vals.Name);
        this.getPOIStore().add(rec);
        rec.commit();
        button.up('window').close();
    },

    init: function(application) {
                this_addPOIEnabled=false;

        this.control({
            "mappanel": {
                afterrender: this.initMap
            },
            "createpoiwindow #btnCreate": {
                click: this.onBtnCreateClick
            }
        });
    },

    addPMToolClickHandler: function() {
        if(!this._addPOIEnabled) {
            var markerOptions = {
                position: this._map.getCenter(),
                map: this._map,
                icon: 'http://images.pinpointers.com/PP3/placemarker-pin.png',
                labelContent: 'Move to a location and click to confirm',
                labelAnchor: new google.maps.Point(-20, 30),
                labelClass: 'pmAddLabel',
                labelStyle: {opacity: 0.75}
            };

            this._addNewPMmarker = new MarkerWithLabel(markerOptions);
            google.maps.event.addListener(this._addNewPMmarker,"click", Ext.Function.bind(this.addNewPMmarkerClickHandler, this));
            this._addPOIEnabled=true;

        } else {
            this._addPOIEnabled=false;
            this._addNewPMmarker.setMap(null);
            this._addNewPMmarker=null;

        }
    },

    addNewPMmarkerClickHandler: function() {
        this.mapClick({latLng:this._addNewPMmarker.getPosition()});
    },

    mapClick: function(event) {
        if(this._addPOIEnabled){
            //this._addNewPMmarker.setMap(null);
            //this._addPOIEnabled=false;
            //this._addPlacemarkerTool.deactivate();
            this.addPlacemarker(Ext.util.Format.round(event.lat(),6),Ext.util.Format.round(event.lng(),6));

        }
    },

    addPlacemarker: function(lat, lon) {
        //console.log(Ext.String.format("{0},{1}",lat,lon));
        var win = new POIManager.view.CreatePOIWindow({});
        var rec = POIManager.model.POI.create({
            Lat: lat,
            Lon: lon
        });

        win.down('form').loadRecord(rec);
        win.show();
    },

    addPMToolMouseMoveHandler: function(event) {
        if(this._addPOIEnabled) {
            this._addNewPMmarker.setPosition(event);
        }
    }

});
